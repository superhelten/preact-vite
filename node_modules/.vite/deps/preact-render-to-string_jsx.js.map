{
  "version": 3,
  "sources": ["../../preact-render-to-string/src/polyfills.js", "../../preact-render-to-string/src/util.js", "../../preact-render-to-string/src/pretty.js", "../../preact-render-to-string/src/index.js", "../../preact-render-to-string/node_modules/pretty-format/printString.js", "../../preact-render-to-string/node_modules/pretty-format/index.js", "../../preact-render-to-string/src/jsx.js", "dep:preact-render-to-string_jsx"],
  "sourcesContent": ["if (typeof Symbol !== 'function') {\n\tlet c = 0;\n\t// eslint-disable-next-line\n\tSymbol = function (s) {\n\t\treturn `@@${s}${++c}`;\n\t};\n\tSymbol.for = (s) => `@@${s}`;\n}\n", "// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\nexport const VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\nexport const UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\nexport const XLINK = /^xlink:?./;\n\nconst ENCODED_ENTITIES = /[\"&<]/;\n\nexport function encodeEntities(str) {\n\t// Ensure we're always parsing and returning a string:\n\tstr += '';\n\n\t// Skip all work for strings with no entities needing encoding:\n\tif (ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n\nexport let indent = (s, char) =>\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nexport let isLargeString = (s, length, ignoreLines) =>\n\tString(s).length > (length || 40) ||\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n\tString(s).indexOf('<') !== -1;\n\nconst JS_TO_CSS = {};\n\nconst CSS_REGEX = /([A-Z])/g;\n// Convert an Object style to a CSSText string\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (val != null && val !== '') {\n\t\t\tif (str) str += ' ';\n\t\t\t// str += jsToCss(prop);\n\t\t\tstr +=\n\t\t\t\tprop[0] == '-'\n\t\t\t\t\t? prop\n\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$1').toLowerCase());\n\n\t\t\tif (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n\t\t\t\tstr = str + ': ' + val + 'px;';\n\t\t\t} else {\n\t\t\t\tstr = str + ': ' + val + ';';\n\t\t\t}\n\t\t}\n\t}\n\treturn str || undefined;\n}\n\n/**\n * Get flattened children from the children prop\n * @param {Array} accumulator\n * @param {any} children A `props.children` opaque object.\n * @returns {Array} accumulator\n * @private\n */\nexport function getChildren(accumulator, children) {\n\tif (Array.isArray(children)) {\n\t\tchildren.reduce(getChildren, accumulator);\n\t} else if (children != null && children !== false) {\n\t\taccumulator.push(children);\n\t}\n\treturn accumulator;\n}\n\nfunction markAsDirty() {\n\tthis.__d = true;\n}\n\nexport function createComponent(vnode, context) {\n\treturn {\n\t\t__v: vnode,\n\t\tcontext,\n\t\tprops: vnode.props,\n\t\t// silently drop state updates\n\t\tsetState: markAsDirty,\n\t\tforceUpdate: markAsDirty,\n\t\t__d: true,\n\t\t// hooks\n\t\t__h: []\n\t};\n}\n\n// Necessary for createContext api. Setting this property will pass\n// the context value as `this.context` just for this component.\nexport function getContext(nodeName, context) {\n\tlet cxType = nodeName.contextType;\n\tlet provider = cxType && context[cxType.__c];\n\treturn cxType != null\n\t\t? provider\n\t\t\t? provider.props.value\n\t\t\t: cxType.__\n\t\t: context;\n}\n", "import {\n\tencodeEntities,\n\tindent,\n\tisLargeString,\n\tstyleObjToCss,\n\tgetChildren,\n\tcreateComponent,\n\tgetContext,\n\tUNSAFE_NAME,\n\tXLINK,\n\tVOID_ELEMENTS\n} from './util';\nimport { options, Fragment } from 'preact';\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = [];\n\nexport function _renderToStringPretty(\n\tvnode,\n\tcontext,\n\topts,\n\tinner,\n\tisSvgMode,\n\tselectValue\n) {\n\tif (vnode == null || typeof vnode === 'boolean') {\n\t\treturn '';\n\t}\n\n\t// #text nodes\n\tif (typeof vnode !== 'object') {\n\t\tif (typeof vnode === 'function') return '';\n\t\treturn encodeEntities(vnode);\n\t}\n\n\tlet pretty = opts.pretty,\n\t\tindentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n\tif (Array.isArray(vnode)) {\n\t\tlet rendered = '';\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\tif (pretty && i > 0) rendered = rendered + '\\n';\n\t\t\trendered =\n\t\t\t\trendered +\n\t\t\t\t_renderToStringPretty(\n\t\t\t\t\tvnode[i],\n\t\t\t\t\tcontext,\n\t\t\t\t\topts,\n\t\t\t\t\tinner,\n\t\t\t\t\tisSvgMode,\n\t\t\t\t\tselectValue\n\t\t\t\t);\n\t\t}\n\t\treturn rendered;\n\t}\n\n\t// VNodes have {constructor:undefined} to prevent JSON injection:\n\tif (vnode.constructor !== undefined) return '';\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\n\t// components\n\tif (typeof nodeName === 'function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t} else if (nodeName === Fragment) {\n\t\t\tconst children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\tchildren,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t} else {\n\t\t\tlet rendered;\n\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\n\n\t\t\t// options._diff\n\t\t\tif (options.__b) options.__b(vnode);\n\n\t\t\t// options._render\n\t\t\tlet renderHook = options.__r;\n\n\t\t\tif (\n\t\t\t\t!nodeName.prototype ||\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\n\t\t\t) {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (c.__d && count++ < 25) {\n\t\t\t\t\tc.__d = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\t// stateless functional components\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state == null) c.state = {};\n\n\t\t\t\tif (c._nextState == null && c.__s == null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\n\t\t\t\t\tc.state = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tc.state,\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t\t\t\t);\n\t\t\t\telse if (c.componentWillMount) {\n\t\t\t\t\tc.componentWillMount();\n\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\t\tc.state =\n\t\t\t\t\t\tc._nextState !== c.state\n\t\t\t\t\t\t\t? c._nextState\n\t\t\t\t\t\t\t: c.__s !== c.state\n\t\t\t\t\t\t\t? c.__s\n\t\t\t\t\t\t\t: c.state;\n\t\t\t\t}\n\n\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\n\t\t\t}\n\n\t\t\tif (options.diffed) options.diffed(vnode);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = '<' + nodeName,\n\t\tpropChildren,\n\t\thtml;\n\n\tif (props) {\n\t\tlet attrs = Object.keys(props);\n\n\t\t// allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n\t\tif (opts && opts.sortAttributes === true) attrs.sort();\n\n\t\tfor (let i = 0; i < attrs.length; i++) {\n\t\t\tlet name = attrs[i],\n\t\t\t\tv = props[name];\n\t\t\tif (name === 'children') {\n\t\t\t\tpropChildren = v;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tif (\n\t\t\t\t!(opts && opts.allAttributes) &&\n\t\t\t\t(name === 'key' ||\n\t\t\t\t\tname === 'ref' ||\n\t\t\t\t\tname === '__self' ||\n\t\t\t\t\tname === '__source')\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (name === 'defaultValue') {\n\t\t\t\tname = 'value';\n\t\t\t} else if (name === 'defaultChecked') {\n\t\t\t\tname = 'checked';\n\t\t\t} else if (name === 'defaultSelected') {\n\t\t\t\tname = 'selected';\n\t\t\t} else if (name === 'className') {\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\n\t\t\t\tname = 'class';\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name === 'htmlFor') {\n\t\t\t\tif (props.for) continue;\n\t\t\t\tname = 'for';\n\t\t\t}\n\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\t// always use string values instead of booleans for aria attributes\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\n\t\t\t\tv = String(v);\n\t\t\t}\n\n\t\t\tlet hooked =\n\t\t\t\topts.attributeHook &&\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked === '') {\n\t\t\t\ts = s + hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tpropChildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (nodeName === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\tnodeName === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = s + ` selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\t// account for >1 multiline attribute\n\tif (pretty) {\n\t\tlet sub = s.replace(/\\n\\s*/, ' ');\n\t\tif (sub !== s && !~sub.indexOf('\\n')) s = sub;\n\t\telse if (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t}\n\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(nodeName))\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid =\n\t\tVOID_ELEMENTS.test(nodeName) ||\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\n\tlet pieces = [];\n\n\tlet children;\n\tif (html) {\n\t\t// if multiline, indent.\n\t\tif (pretty && isLargeString(html)) {\n\t\t\thtml = '\\n' + indentChar + indent(html, indentChar);\n\t\t}\n\t\ts = s + html;\n\t} else if (\n\t\tpropChildren != null &&\n\t\tgetChildren((children = []), propChildren).length\n\t) {\n\t\tlet hasLarge = pretty && ~s.indexOf('\\n');\n\t\tlet lastWasText = false;\n\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\t\tnodeName === 'svg'\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\n\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t: isSvgMode,\n\t\t\t\t\tret = _renderToStringPretty(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tchildSvgMode,\n\t\t\t\t\t\tselectValue\n\t\t\t\t\t);\n\n\t\t\t\tif (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tif (pretty) {\n\t\t\t\t\t\tlet isText = ret.length > 0 && ret[0] != '<';\n\n\t\t\t\t\t\t// We merge adjacent text nodes, otherwise each piece would be printed\n\t\t\t\t\t\t// on a new line.\n\t\t\t\t\t\tif (lastWasText && isText) {\n\t\t\t\t\t\t\tpieces[pieces.length - 1] += ret;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlastWasText = isText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pretty && hasLarge) {\n\t\t\tfor (let i = pieces.length; i--; ) {\n\t\t\t\tpieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length || html) {\n\t\ts = s + pieces.join('');\n\t} else if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length - 1) + ' />';\n\t}\n\n\tif (isVoid && !children && !html) {\n\t\ts = s.replace(/>$/, ' />');\n\t} else {\n\t\tif (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t\ts = s + `</${nodeName}>`;\n\t}\n\n\treturn s;\n}\n\nfunction getComponentName(component) {\n\treturn (\n\t\tcomponent.displayName ||\n\t\t(component !== Function && component.name) ||\n\t\tgetFallbackComponentName(component)\n\t);\n}\n\nfunction getFallbackComponentName(component) {\n\tlet str = Function.prototype.toString.call(component),\n\t\tname = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1];\n\tif (!name) {\n\t\t// search for an existing indexed name for the given component:\n\t\tlet index = -1;\n\t\tfor (let i = UNNAMED.length; i--; ) {\n\t\t\tif (UNNAMED[i] === component) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// not found, create a new indexed name:\n\t\tif (index < 0) {\n\t\t\tindex = UNNAMED.push(component) - 1;\n\t\t}\n\t\tname = `UnnamedComponent${index}`;\n\t}\n\treturn name;\n}\n", "import {\n\tencodeEntities,\n\tstyleObjToCss,\n\tgetContext,\n\tcreateComponent,\n\tUNSAFE_NAME,\n\tXLINK,\n\tVOID_ELEMENTS\n} from './util';\nimport { options, h, Fragment } from 'preact';\nimport { _renderToStringPretty } from './pretty';\nimport {\n\tCOMMIT,\n\tCOMPONENT,\n\tDIFF,\n\tDIFFED,\n\tDIRTY,\n\tNEXT_STATE,\n\tPARENT,\n\tRENDER,\n\tSKIP_EFFECTS,\n\tVNODE,\n\tCHILDREN\n} from './constants';\n\n/** @typedef {import('preact').VNode} VNode */\n\nconst SHALLOW = { shallow: true };\n\n/** Render Preact JSX + Components to an HTML string.\n *\t@name render\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n *\t@param {Object} [options={}]\tRendering options\n *\t@param {Boolean} [options.shallow=false]\tIf `true`, renders nested Components as HTML elements (`<Foo a=\"b\" />`).\n *\t@param {Boolean} [options.xml=false]\t\tIf `true`, uses self-closing tags for elements without children.\n *\t@param {Boolean} [options.pretty=false]\t\tIf `true`, adds whitespace for readability\n *\t@param {RegExp|undefined} [options.voidElements]       RegeEx that matches elements that are considered void (self-closing)\n */\nrenderToString.render = renderToString;\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n *\tThis method is just a convenience alias for `render(vnode, context, { shallow:true })`\n *\t@name shallow\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n */\nlet shallowRender = (vnode, context) => renderToString(vnode, context, SHALLOW);\n\nconst EMPTY_ARR = [];\nfunction renderToString(vnode, context, opts) {\n\tcontext = context || {};\n\n\t// Performance optimization: `renderToString` is synchronous and we\n\t// therefore don't execute any effects. To do that we pass an empty\n\t// array to `options._commit` (`__c`). But we can go one step further\n\t// and avoid a lot of dirty checks and allocations by setting\n\t// `options._skipEffects` (`__s`) too.\n\tconst previousSkipEffects = options[SKIP_EFFECTS];\n\toptions[SKIP_EFFECTS] = true;\n\n\tconst parent = h(Fragment, null);\n\tparent[CHILDREN] = [vnode];\n\n\tlet res;\n\tif (\n\t\topts &&\n\t\t(opts.pretty ||\n\t\t\topts.voidElements ||\n\t\t\topts.sortAttributes ||\n\t\t\topts.shallow ||\n\t\t\topts.allAttributes ||\n\t\t\topts.xml ||\n\t\t\topts.attributeHook)\n\t) {\n\t\tres = _renderToStringPretty(vnode, context, opts);\n\t} else {\n\t\tres = _renderToString(vnode, context, false, undefined, parent);\n\t}\n\n\t// options._commit, we don't schedule any effects in this library right now,\n\t// so we can pass an empty queue to this hook.\n\tif (options[COMMIT]) options[COMMIT](vnode, EMPTY_ARR);\n\toptions[SKIP_EFFECTS] = previousSkipEffects;\n\tEMPTY_ARR.length = 0;\n\n\treturn res;\n}\n\nfunction renderFunctionComponent(vnode, context) {\n\tlet rendered,\n\t\tc = createComponent(vnode, context),\n\t\tcctx = getContext(vnode.type, context);\n\n\tvnode[COMPONENT] = c;\n\n\t// If a hook invokes setState() to invalidate the component during rendering,\n\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t// Note:\n\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\tlet renderHook = options[RENDER];\n\tlet count = 0;\n\twhile (c[DIRTY] && count++ < 25) {\n\t\tc[DIRTY] = false;\n\n\t\tif (renderHook) renderHook(vnode);\n\n\t\t// stateless functional components\n\t\trendered = vnode.type.call(c, vnode.props, cctx);\n\t}\n\n\treturn rendered;\n}\n\nfunction renderClassComponent(vnode, context) {\n\tlet nodeName = vnode.type,\n\t\tcctx = getContext(nodeName, context);\n\n\t// c = new nodeName(props, context);\n\tlet c = new nodeName(vnode.props, cctx);\n\tvnode[COMPONENT] = c;\n\tc[VNODE] = vnode;\n\t// turn off stateful re-rendering:\n\tc[DIRTY] = true;\n\tc.props = vnode.props;\n\tif (c.state == null) c.state = {};\n\n\tif (c[NEXT_STATE] == null) {\n\t\tc[NEXT_STATE] = c.state;\n\t}\n\n\tc.context = cctx;\n\tif (nodeName.getDerivedStateFromProps) {\n\t\tc.state = assign(\n\t\t\t{},\n\t\t\tc.state,\n\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t);\n\t} else if (c.componentWillMount) {\n\t\tc.componentWillMount();\n\n\t\t// If the user called setState in cWM we need to flush pending,\n\t\t// state updates. This is the same behaviour in React.\n\t\tc.state = c[NEXT_STATE] !== c.state ? c[NEXT_STATE] : c.state;\n\t}\n\n\tlet renderHook = options[RENDER];\n\tif (renderHook) renderHook(vnode);\n\n\treturn c.render(c.props, c.state, c.context);\n}\n\nfunction normalizePropName(name, isSvgMode) {\n\tif (name === 'className') {\n\t\treturn 'class';\n\t} else if (name === 'htmlFor') {\n\t\treturn 'for';\n\t} else if (name === 'defaultValue') {\n\t\treturn 'value';\n\t} else if (name === 'defaultChecked') {\n\t\treturn 'checked';\n\t} else if (name === 'defaultSelected') {\n\t\treturn 'selected';\n\t} else if (isSvgMode && XLINK.test(name)) {\n\t\treturn name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t}\n\n\treturn name;\n}\n\nfunction normalizePropValue(name, v) {\n\tif (name === 'style' && v != null && typeof v === 'object') {\n\t\treturn styleObjToCss(v);\n\t} else if (name[0] === 'a' && name[1] === 'r' && typeof v === 'boolean') {\n\t\t// always use string values instead of booleans for aria attributes\n\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\treturn String(v);\n\t}\n\n\treturn v;\n}\n\nconst isArray = Array.isArray;\nconst assign = Object.assign;\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, context, isSvgMode, selectValue, parent) {\n\t// Ignore non-rendered VNodes/values\n\tif (vnode == null || vnode === true || vnode === false || vnode === '') {\n\t\treturn '';\n\t}\n\n\t// Text VNodes: escape as HTML\n\tif (typeof vnode !== 'object') {\n\t\tif (typeof vnode === 'function') return '';\n\t\treturn encodeEntities(vnode);\n\t}\n\n\t// Recurse into children / Arrays\n\tif (isArray(vnode)) {\n\t\tlet rendered = '';\n\t\tparent[CHILDREN] = vnode;\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\trendered =\n\t\t\t\trendered +\n\t\t\t\t_renderToString(vnode[i], context, isSvgMode, selectValue, parent);\n\t\t}\n\t\treturn rendered;\n\t}\n\n\t// VNodes have {constructor:undefined} to prevent JSON injection:\n\tif (vnode.constructor !== undefined) return '';\n\n\tvnode[PARENT] = parent;\n\tif (options[DIFF]) options[DIFF](vnode);\n\n\tlet type = vnode.type,\n\t\tprops = vnode.props;\n\n\t// Invoke rendering on Components\n\tconst isComponent = typeof type === 'function';\n\tif (isComponent) {\n\t\tlet rendered;\n\t\tif (type === Fragment) {\n\t\t\trendered = props.children;\n\t\t} else {\n\t\t\tif (type.prototype && typeof type.prototype.render === 'function') {\n\t\t\t\trendered = renderClassComponent(vnode, context);\n\t\t\t} else {\n\t\t\t\trendered = renderFunctionComponent(vnode, context);\n\t\t\t}\n\n\t\t\tlet component = vnode[COMPONENT];\n\t\t\tif (component.getChildContext) {\n\t\t\t\tcontext = assign({}, context, component.getChildContext());\n\t\t\t}\n\t\t}\n\n\t\t// When a component returns a Fragment node we flatten it in core, so we\n\t\t// need to mirror that logic here too\n\t\tlet isTopLevelFragment =\n\t\t\trendered != null && rendered.type === Fragment && rendered.key == null;\n\t\trendered = isTopLevelFragment ? rendered.props.children : rendered;\n\n\t\t// Recurse into children before invoking the after-diff hook\n\t\tconst str = _renderToString(\n\t\t\trendered,\n\t\t\tcontext,\n\t\t\tisSvgMode,\n\t\t\tselectValue,\n\t\t\tvnode\n\t\t);\n\n\t\tif (options[DIFFED]) options[DIFFED](vnode);\n\t\tvnode[PARENT] = undefined;\n\n\t\tif (options.unmount) options.unmount(vnode);\n\n\t\treturn str;\n\t}\n\n\t// Serialize Element VNodes to HTML\n\tlet s = '<',\n\t\tchildren,\n\t\thtml;\n\n\ts = s + type;\n\n\tif (props) {\n\t\tchildren = props.children;\n\t\tfor (let name in props) {\n\t\t\tlet v = props[name];\n\n\t\t\tif (\n\t\t\t\tname === 'key' ||\n\t\t\t\tname === 'ref' ||\n\t\t\t\tname === '__self' ||\n\t\t\t\tname === '__source' ||\n\t\t\t\tname === 'children' ||\n\t\t\t\t(name === 'className' && 'class' in props) ||\n\t\t\t\t(name === 'htmlFor' && 'for' in props)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tname = normalizePropName(name, isSvgMode);\n\t\t\tv = normalizePropValue(name, v);\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (type === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tchildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (type === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\ttype === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\t!('selected' in props)\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = s + ' selected';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ' ' + name + '=\"' + encodeEntities(v) + '\"';\n\t\t\t}\n\t\t}\n\t}\n\n\tlet startElement = s;\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(type)) {\n\t\tthrow new Error(`${type} is not a valid HTML tag name in ${s}`);\n\t}\n\n\tlet pieces = '';\n\tlet hasChildren = false;\n\n\tif (html) {\n\t\tpieces = pieces + html;\n\t\thasChildren = true;\n\t} else if (typeof children === 'string') {\n\t\tpieces = pieces + encodeEntities(children);\n\t\thasChildren = true;\n\t} else if (isArray(children)) {\n\t\tvnode[CHILDREN] = children;\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\n\t\t\t\tlet ret = _renderToString(\n\t\t\t\t\tchild,\n\t\t\t\t\tcontext,\n\t\t\t\t\tchildSvgMode,\n\t\t\t\t\tselectValue,\n\t\t\t\t\tvnode\n\t\t\t\t);\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tpieces = pieces + ret;\n\t\t\t\t\thasChildren = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (children != null && children !== false && children !== true) {\n\t\tvnode[CHILDREN] = [children];\n\t\tlet childSvgMode =\n\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\n\t\tlet ret = _renderToString(\n\t\t\tchildren,\n\t\t\tcontext,\n\t\t\tchildSvgMode,\n\t\t\tselectValue,\n\t\t\tvnode\n\t\t);\n\n\t\t// Skip if we received an empty string\n\t\tif (ret) {\n\t\t\tpieces = pieces + ret;\n\t\t\thasChildren = true;\n\t\t}\n\t}\n\n\tif (options[DIFFED]) options[DIFFED](vnode);\n\tvnode[PARENT] = undefined;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (hasChildren) {\n\t\ts = s + pieces;\n\t} else if (VOID_ELEMENTS.test(type)) {\n\t\treturn startElement + ' />';\n\t}\n\n\treturn s + '</' + type + '>';\n}\n\n/** The default export is an alias of `render()`. */\n\nrenderToString.shallowRender = shallowRender;\n\nexport default renderToString;\n\nexport {\n\trenderToString as render,\n\trenderToString as renderToStaticMarkup,\n\trenderToString,\n\tshallowRender\n};\n", "'use strict';\n\nconst ESCAPED_CHARACTERS = /(\\\\|\\\"|\\')/g;\n\nmodule.exports = function printString(val) {\n  return val.replace(ESCAPED_CHARACTERS, '\\\\$1');\n}\n", "'use strict';\n\nconst printString = require('./printString');\n\nconst toString = Object.prototype.toString;\nconst toISOString = Date.prototype.toISOString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = Symbol.prototype.toString;\n\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nconst NEWLINE_REGEXP = /\\n/ig;\n\nconst getSymbols = Object.getOwnPropertySymbols || (obj => []);\n\nfunction isToStringedArrayType(toStringed) {\n  return (\n    toStringed === '[object Array]' ||\n    toStringed === '[object ArrayBuffer]' ||\n    toStringed === '[object DataView]' ||\n    toStringed === '[object Float32Array]' ||\n    toStringed === '[object Float64Array]' ||\n    toStringed === '[object Int8Array]' ||\n    toStringed === '[object Int16Array]' ||\n    toStringed === '[object Int32Array]' ||\n    toStringed === '[object Uint8Array]' ||\n    toStringed === '[object Uint8ClampedArray]' ||\n    toStringed === '[object Uint16Array]' ||\n    toStringed === '[object Uint32Array]'\n  );\n}\n\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && (1 / val) < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\n\nfunction printFunction(val) {\n  if (val.name === '') {\n    return '[Function anonymous]'\n  } else {\n    return '[Function ' + val.name + ']';\n  }\n}\n\nfunction printSymbol(val) {\n  return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n}\n\nfunction printError(val) {\n  return '[' + errorToString.call(val) + ']';\n}\n\nfunction printBasicValue(val) {\n  if (val === true || val === false) return '' + val;\n  if (val === undefined) return 'undefined';\n  if (val === null) return 'null';\n\n  const typeOf = typeof val;\n\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return '\"' + printString(val) + '\"';\n  if (typeOf === 'function') return printFunction(val);\n  if (typeOf === 'symbol') return printSymbol(val);\n\n  const toStringed = toString.call(val);\n\n  if (toStringed === '[object WeakMap]') return 'WeakMap {}';\n  if (toStringed === '[object WeakSet]') return 'WeakSet {}';\n  if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') return printFunction(val, min);\n  if (toStringed === '[object Symbol]') return printSymbol(val);\n  if (toStringed === '[object Date]') return toISOString.call(val);\n  if (toStringed === '[object Error]') return printError(val);\n  if (toStringed === '[object RegExp]') return regExpToString.call(val);\n  if (toStringed === '[object Arguments]' && val.length === 0) return 'Arguments []';\n  if (isToStringedArrayType(toStringed) && val.length === 0) return val.constructor.name + ' []';\n\n  if (val instanceof Error) return printError(val);\n\n  return false;\n}\n\nfunction printList(list, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let body = '';\n\n  if (list.length) {\n    body += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    for (let i = 0; i < list.length; i++) {\n      body += innerIndent + print(list[i], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      if (i < list.length - 1) {\n        body += ',' + spacing;\n      }\n    }\n\n    body += edgeSpacing + prevIndent;\n  }\n\n  return '[' + body + ']';\n}\n\nfunction printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  return (min ? '' : 'Arguments ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n}\n\nfunction printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  return (min ? '' : val.constructor.name + ' ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n}\n\nfunction printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let result = 'Map {';\n  const iterator = val.entries();\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    while (!current.done) {\n      const key = print(current.value[0], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n      const value = print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      result += innerIndent + key + ' => ' + value;\n\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + spacing;\n      }\n    }\n\n    result += edgeSpacing + prevIndent;\n  }\n\n  return result + '}';\n}\n\nfunction printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  const constructor = min ? '' : (val.constructor ?  val.constructor.name + ' ' : 'Object ');\n  let result = constructor + '{';\n  let keys = Object.keys(val).sort();\n  const symbols = getSymbols(val);\n\n  if (symbols.length) {\n    keys = keys\n      .filter(key => !(typeof key === 'symbol' || toString.call(key) === '[object Symbol]'))\n      .concat(symbols);\n  }\n\n  if (keys.length) {\n    result += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const name = print(key, indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n      const value = print(val[key], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      result += innerIndent + name + ': ' + value;\n\n      if (i < keys.length - 1) {\n        result += ',' + spacing;\n      }\n    }\n\n    result += edgeSpacing + prevIndent;\n  }\n\n  return result + '}';\n}\n\nfunction printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let result = 'Set {';\n  const iterator = val.entries();\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    while (!current.done) {\n      result += innerIndent + print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + spacing;\n      }\n    }\n\n    result += edgeSpacing + prevIndent;\n  }\n\n  return result + '}';\n}\n\nfunction printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  refs = refs.slice();\n  if (refs.indexOf(val) > -1) {\n    return '[Circular]';\n  } else {\n    refs.push(val);\n  }\n\n  currentDepth++;\n\n  const hitMaxDepth = currentDepth > maxDepth;\n\n  if (!hitMaxDepth && val.toJSON && typeof val.toJSON === 'function') {\n    return print(val.toJSON(), indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  }\n\n  const toStringed = toString.call(val);\n  if (toStringed === '[object Arguments]') {\n    return hitMaxDepth ? '[Arguments]' : printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (isToStringedArrayType(toStringed)) {\n    return hitMaxDepth ? '[Array]' : printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (toStringed === '[object Map]') {\n    return hitMaxDepth ? '[Map]' : printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (toStringed === '[object Set]') {\n    return hitMaxDepth ? '[Set]' : printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (typeof val === 'object') {\n    return hitMaxDepth ? '[Object]' : printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  }\n}\n\nfunction printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let match = false;\n  let plugin;\n\n  for (let p = 0; p < plugins.length; p++) {\n    plugin = plugins[p];\n\n    if (plugin.test(val)) {\n      match = true;\n      break;\n    }\n  }\n\n  if (!match) {\n    return false;\n  }\n\n  function boundPrint(val) {\n    return print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  }\n\n  function boundIndent(str) {\n    const indentation = prevIndent + indent;\n    return indentation + str.replace(NEWLINE_REGEXP, '\\n' + indentation);\n  }\n\n  return plugin.print(val, boundPrint, boundIndent, {\n    edgeSpacing: edgeSpacing,\n    spacing: spacing\n  });\n}\n\nfunction print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  const basic = printBasicValue(val);\n  if (basic) return basic;\n\n  const plugin = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  if (plugin) return plugin;\n\n  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n}\n\nconst DEFAULTS = {\n  indent: 2,\n  min: false,\n  maxDepth: Infinity,\n  plugins: []\n};\n\nfunction validateOptions(opts) {\n  Object.keys(opts).forEach(key => {\n    if (!DEFAULTS.hasOwnProperty(key)) {\n      throw new Error('prettyFormat: Invalid option: ' + key);\n    }\n  });\n\n  if (opts.min && opts.indent !== undefined && opts.indent !== 0) {\n    throw new Error('prettyFormat: Cannot run with min option and indent');\n  }\n}\n\nfunction normalizeOptions(opts) {\n  const result = {};\n\n  Object.keys(DEFAULTS).forEach(key =>\n    result[key] = opts.hasOwnProperty(key) ? opts[key] : DEFAULTS[key]\n  );\n\n  if (result.min) {\n    result.indent = 0;\n  }\n\n  return result;\n}\n\nfunction createIndent(indent) {\n  return new Array(indent + 1).join(' ');\n}\n\nfunction prettyFormat(val, opts) {\n  if (!opts) {\n    opts = DEFAULTS;\n  } else {\n    validateOptions(opts)\n    opts = normalizeOptions(opts);\n  }\n\n  let indent;\n  let refs;\n  const prevIndent = '';\n  const currentDepth = 0;\n  const spacing = opts.min ? ' ' : '\\n';\n  const edgeSpacing = opts.min ? '' : '\\n';\n\n  if (opts && opts.plugins.length) {\n    indent = createIndent(opts.indent);\n    refs = [];\n    var pluginsResult = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min);\n    if (pluginsResult) return pluginsResult;\n  }\n\n  var basicResult = printBasicValue(val);\n  if (basicResult) return basicResult;\n\n  if (!indent) indent = createIndent(opts.indent);\n  if (!refs) refs = [];\n  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min);\n}\n\nmodule.exports = prettyFormat;\n", "import './polyfills';\nimport renderToString from './index';\nimport { indent, encodeEntities } from './util';\nimport prettyFormat from 'pretty-format';\n\n// we have to patch in Array support, Possible issue in npm.im/pretty-format\nlet preactPlugin = {\n\ttest(object) {\n\t\treturn (\n\t\t\tobject &&\n\t\t\ttypeof object === 'object' &&\n\t\t\t'type' in object &&\n\t\t\t'props' in object &&\n\t\t\t'key' in object\n\t\t);\n\t},\n\tprint(val, print, indent) {\n\t\treturn renderToString(val, preactPlugin.context, preactPlugin.opts, true);\n\t}\n};\n\nlet prettyFormatOpts = {\n\tplugins: [preactPlugin]\n};\n\nfunction attributeHook(name, value, context, opts, isComponent) {\n\tlet type = typeof value;\n\n\t// Use render-to-string's built-in handling for these properties\n\tif (name === 'dangerouslySetInnerHTML') return false;\n\n\t// always skip null & undefined values, skip false DOM attributes, skip functions if told to\n\tif (value == null || (type === 'function' && !opts.functions)) return '';\n\n\tif (\n\t\topts.skipFalseAttributes &&\n\t\t!isComponent &&\n\t\t(value === false ||\n\t\t\t((name === 'class' || name === 'style') && value === ''))\n\t)\n\t\treturn '';\n\n\tlet indentChar = typeof opts.pretty === 'string' ? opts.pretty : '\\t';\n\tif (type !== 'string') {\n\t\tif (type === 'function' && !opts.functionNames) {\n\t\t\tvalue = 'Function';\n\t\t} else {\n\t\t\tpreactPlugin.context = context;\n\t\t\tpreactPlugin.opts = opts;\n\t\t\tvalue = prettyFormat(value, prettyFormatOpts);\n\t\t\tif (~value.indexOf('\\n')) {\n\t\t\t\tvalue = `${indent('\\n' + value, indentChar)}\\n`;\n\t\t\t}\n\t\t}\n\t\treturn indent(`\\n${name}={${value}}`, indentChar);\n\t}\n\treturn `\\n${indentChar}${name}=\"${encodeEntities(value)}\"`;\n}\n\nlet defaultOpts = {\n\tattributeHook,\n\tjsx: true,\n\txml: false,\n\tfunctions: true,\n\tfunctionNames: true,\n\tskipFalseAttributes: true,\n\tpretty: '  '\n};\n\nfunction renderToJsxString(vnode, context, opts, inner) {\n\topts = Object.assign({}, defaultOpts, opts || {});\n\treturn renderToString(vnode, context, opts, inner);\n}\n\nexport default renderToJsxString;\nexport { renderToJsxString as render };\n", "import d from \"./node_modules/preact-render-to-string/dist/jsx.mjs\";export default d;\nexport * from \"./node_modules/preact-render-to-string/dist/jsx.mjs\""],
  "mappings": "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",
  "names": ["Symbol", "c", "s", "IS_NON_DIMENSIONAL", "VOID_ELEMENTS", "UNSAFE_NAME", "XLINK", "ENCODED_ENTITIES", "encodeEntities", "str", "test", "last", "i", "out", "ch", "length", "charCodeAt", "slice", "indent", "char", "String", "replace", "isLargeString", "ignoreLines", "indexOf", "JS_TO_CSS", "CSS_REGEX", "styleObjToCss", "prop", "val", "toLowerCase", "undefined", "getChildren", "accumulator", "children", "Array", "isArray", "reduce", "push", "markAsDirty", "this", "__d", "createComponent", "vnode", "context", "__v", "props", "setState", "forceUpdate", "__h", "getContext", "nodeName", "cxType", "contextType", "provider", "__c", "value", "__", "UNNAMED", "_renderToStringPretty", "opts", "inner", "isSvgMode", "selectValue", "pretty", "indentChar", "rendered", "constructor", "component", "type", "isComponent", "shallow", "renderRootComponent", "Fragment", "shallowHighOrder", "options", "__b", "renderHook", "__r", "prototype", "render", "cctx", "_dirty", "state", "_nextState", "__s", "getDerivedStateFromProps", "Object", "assign", "componentWillMount", "count", "call", "getChildContext", "diffed", "displayName", "Function", "name", "toString", "match", "index", "propChildren", "html", "attrs", "keys", "sortAttributes", "sort", "v", "allAttributes", "hooked", "attributeHook", "__html", "xml", "selected", "sub", "Error", "isVoid", "voidElements", "pieces", "hasLarge", "lastWasText", "child", "ret", "isText", "join", "substring", "SHALLOW", "renderToString", "EMPTY_ARR", "previousSkipEffects", "res", "parent", "h", "_renderToString", "normalizePropName", "normalizePropValue", "key", "unmount", "startElement", "hasChildren", "shallowRender", "ESCAPED_CHARACTERS", "toISOString", "Date", "errorToString", "regExpToString", "RegExp", "symbolToString", "SYMBOL_REGEXP", "NEWLINE_REGEXP", "getSymbols", "getOwnPropertySymbols", "obj", "isToStringedArrayType", "toStringed", "printFunction", "printSymbol", "printError", "printBasicValue", "typeOf", "min", "printList", "list", "prevIndent", "spacing", "edgeSpacing", "refs", "maxDepth", "currentDepth", "plugins", "body", "innerIndent", "print", "printComplexValue", "hitMaxDepth", "toJSON", "result", "iterator", "entries", "current", "next", "done", "symbols", "filter", "concat", "printPlugin", "plugin", "p", "indentation", "DEFAULTS", "Infinity", "createIndent", "preactPlugin", "object", "prettyFormatOpts", "defaultOpts", "functions", "skipFalseAttributes", "functionNames", "forEach", "hasOwnProperty", "pluginsResult", "jsx", "renderToJsxString"]
}
