{
  "version": 3,
  "sources": ["../../preact/hooks/src/index.js"],
  "sourcesContent": ["import { Fragment, options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tif (\n\t\ttypeof vnode.type === 'function' &&\n\t\t!vnode._mask &&\n\t\tvnode.type !== Fragment\n\t) {\n\t\tvnode._mask =\n\t\t\t(vnode._parent && vnode._parent._mask ? vnode._parent._mask : '') +\n\t\t\t(vnode._parent && vnode._parent._children\n\t\t\t\t? vnode._parent._children.indexOf(vnode)\n\t\t\t\t: 0);\n\t} else if (!vnode._mask) {\n\t\tvnode._mask =\n\t\t\tvnode._parent && vnode._parent._mask ? vnode._parent._mask : '';\n\t}\n\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nfunction hash(s) {\n\tlet h = 0,\n\t\ti = s.length;\n\twhile (i > 0) {\n\t\th = ((h << 5) - h + s.charCodeAt(--i)) | 0;\n\t}\n\treturn h;\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\tstate._value = 'P' + hash(currentComponent._vnode._mask) + currentIndex;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": ["currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "oldBeforeDiff", "options", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "getHookState", "index", "type", "__h", "hooks", "__H", "__", "length", "push", "__V", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "prevScu", "shouldComponentUpdate", "p", "s", "c", "stateHooks", "filter", "x", "every", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "useEffect", "callback", "args", "state", "argsChanged", "_pendingArgs", "useLayoutEffect", "__s", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "h", "i", "charCodeAt", "__v", "__m", "flushAfterPaintEffects", "component", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "__e", "vnode", "Fragment", "indexOf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "hasErrored", "HAS_RAF", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "oldArgs", "newArgs", "arg", "f"]
}
